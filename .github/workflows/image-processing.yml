name: Intelligent WebP Image Conversion

on:
  push:

jobs:
  convert-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up ImageMagick and WebP
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick webp

      - name: Convert images to WebP with dynamic quality
        run: |
          #!/bin/bash
          
          # Function to determine quality based on image size
          get_quality() {
            local img_path="$1"
            local img_size=$(stat -c%s "$img_path")
            
            # Size thresholds (in bytes)
            local small_threshold=$((100 * 1024))    # 100 KB
            local medium_threshold=$((1 * 1024 * 1024))   # 1 MB
            local large_threshold=$((5 * 1024 * 1024))    # 5 MB
            
            # Quality levels
            local small_quality=85
            local medium_quality=75
            local large_quality=65
            local xlarge_quality=55
            
            if [ $img_size -lt $small_threshold ]; then
              echo $small_quality
            elif [ $img_size -lt $medium_threshold ]; then
              echo $medium_quality
            elif [ $img_size -lt $large_threshold ]; then
              echo $large_quality
            else
              echo $xlarge_quality
            fi
          }

          rm -Rf images/*
          
          find . \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.tiff" -o -name "*.bmp" \) -not -path "*/\.git/*" | while read -r img; do
            # Skip if file doesn't exist
            [ -f "$img" ] || continue
            
            # Generate WebP filename
            webp_img="${img%.*}.webp"
            
            # Determine quality dynamically
            quality=$(get_quality "$img")
            
            # Get image dimensions
            dimensions=$(identify -format "%wx%h" "$img")
            
            # Convert image to WebP with dynamic quality
            convert "$img" -quality "$quality" -define webp:lossless=false "$webp_img"

            # Print conversion details
            original_size=$(stat -c%s "$img")
            webp_size=$(stat -c%s "$webp_img")
            compression_ratio=$(echo "scale=2; ($original_size - $webp_size) / $original_size * 100" | bc)
            
            echo "Converted: $img"
            echo "  - Original size: $(($original_size / 1024)) KB"
            echo "  - WebP size: $(($webp_size / 1024)) KB"
            echo "  - Compression: $compression_ratio%"
            echo "  - Quality: $quality"
            echo "  - Dimensions: $dimensions"

            # Remove image
            rm -Rv "$img"
          done

          mkdir -p images
          find . -name "*.webp" -not -path "*/\.git/*" | while read -r img; do
            mv "$img" images/
          done

      - name: Commit converted images
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all
          git diff-index --quiet HEAD || git commit -m "Convert images to WebP with intelligent compression"
          git push
